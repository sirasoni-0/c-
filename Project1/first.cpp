int main()
{
	//2025.7.8
	//자료형 (크기단위 byte=(8bit))
	//정수형: char(1), short(2), int(4), long(4), longlong(8)
	//실수형: float(4), double(8), long double(16)
	//unsigned는 양의 정수만 표현한다. 
	//MSB는 most siginificnat bit 라는 의미로 부호를 결정함. 1은 음수 0은 양수
	//컴퓨터는 음수의 표현을 합이 0이 되는 수로 한다.
	//2의 보수법을 이용하면 sighed에서 unsighed의 값으로 음수를 표현할 수 있다.

	int i = 0;
	//1byte로 양수만 표현 256가지 0~255
	unsigned char c = 0;
	c = 0;
	c = 255;
	
	c = -1;
	//1byte로 정수 표현 256가지 -128~0~127
	char c1 = 0;

	c1 = 129;
	//2025.7.9
	//컴퓨터에서 정수와 실수는 표현 방식이 다르다.(실수는 약간의 차이 속에도 무수히 많은 수가 있어서 비트가 부족함.)
	//실수는 부동 소수점 방식을 사용하여 표현하는데 double을 사용하면 정밀도가 올라가서 근사치를 구할 수 있다.
	// 되도록 같은 자료형끼리 계산을 하지만, 의도된 거라면 표시한다.
	//ex
	double d = 10.2415f + (float)20;

	//산술연산자 +,-,*,/,%(모듈러스 연산자, 정수만 사용 가능. 나머지만 출력)
	int data = 10 % 3;

	data = 10 + 10;
	//data = data + 20 == data += 20
	// 실수를 상수로 적을 경우 f를 붙이면 float으로, 안붙이면 double 형이 됨.
	data = (10.f / 3.f);


	//증감 연산자 ++, -- 다음단계로 증가 or 감소
	// ++a: 전위
	// a++: 후위(후위로 사용할 경우 모든 연산자보다 순위가 밀린다. 즉시 적용 안되고 다음부터 적용)

	data = 0;
	c = 10;

	data = c++;
	
	
	
	return 0;
}
